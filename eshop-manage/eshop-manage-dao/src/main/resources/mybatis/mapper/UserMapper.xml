<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.jianwoo.eshop.manage.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="cn.jianwoo.eshop.manage.entity.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="token" property="token" jdbcType="VARCHAR"/>
        <result column="ex_field1" property="exField1" jdbcType="VARCHAR"/>
        <result column="ex_field2" property="exField2" jdbcType="VARCHAR"/>
        <result column="ex_field3" property="exField3" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="created" property="created" jdbcType="TIMESTAMP"/>
        <result column="updated" property="updated" jdbcType="TIMESTAMP"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="sex" property="sex" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>
    <select id="getByKey" resultMap="BaseResultMap" parameterType="java.util.Map">
        SELECT * FROM `user`
        <choose>
            <!-- test语句必须外面是单引号，里面是双引号，否则失效 -->
            <when test='type=="1"'>
                WHERE username = #{param}
            </when>
            <when test='type=="2"'>
                WHERE phone = #{param}
            </when>
            <when test='type=="3"'>
                WHERE email = #{param}
            </when>
            <otherwise>
                WHERE 1=1
            </otherwise>
        </choose>
    </select>
    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT * FROM `user`
          where  id=#{id}
    </select>
    <select id="getcount" resultType="java.lang.Integer">
        select count(*)
         from `user`
    </select>
    <select id="getUserListByWithMap" resultMap="BaseResultMap" parameterType="java.util.Map">
        select *
        from `user`
        <choose>
            <when test='type =="likename"'>
                where username like concat('%',#{params},'%')
                or nick_name like   concat('%',#{params},'%')
            </when>
        </choose>
        order  by created desc
    </select>
    <select id="getList" resultMap="BaseResultMap" >
        select *
        from `user`
        order  by created desc
    </select>

    <select id="getByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT * FROM `user`
           where   username = #{name}
    </select>
    <select id="getByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT * FROM `user`
           where   phone = #{phone}
    </select>
    <insert id="insert" parameterType="cn.jianwoo.eshop.manage.entity.User" keyProperty="id" useGeneratedKeys="true" >
        INSERT INTO `user`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id !=null ">
                id,
            </if>
            <if test="username !=null ">
                username,
            </if>
            <if test="password !=null ">
                password,
            </if>
            <if test="phone !=null ">
                phone,
            </if>
            <if test="email !=null ">
                email,
            </if>
            <if test="created !=null ">
                created,
            </if>
            <if test="updated !=null ">
                updated,
            </if>
            <if test="nickName !=null ">
                nick_name,
            </if>
            <if test="type !=null ">
                `type`,
            </if>
            <if test="token !=null ">
                token,
            </if>
            <if test="exField1 !=null ">
                ex_field1,
            </if>
            <if test="exField2 !=null ">
                ex_field2,
            </if>
            <if test="exField3 !=null ">
                ex_field3,
            </if>
            <if test="sex !=null ">
                sex,
            </if>
            <if test="avatar !=null ">
                avatar,
            </if>
            <if test="status !=null ">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id !=null ">
                #{id,jdbcType=BIGINT },
            </if>
            <if test="username !=null ">
                #{username,jdbcType=VARCHAR },
            </if>
            <if test="password !=null ">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="phone !=null ">
                #{phone,jdbcType=VARCHAR },
            </if>
            <if test="email !=null ">
                #{email,jdbcType=VARCHAR },
            </if>
            <if test="created !=null ">
                #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="updated !=null ">
                #{updated,jdbcType=TIMESTAMP },
            </if>
            <if test="nickName !=null ">
                #{nickName,jdbcType=VARCHAR },
            </if>
            <if test="type !=null ">
                #{type,jdbcType=INTEGER },
            </if>
            <if test="token !=null ">
                #{token,jdbcType=VARCHAR },
            </if>
            <if test="exField1 !=null ">
                #{exField1,jdbcType=VARCHAR },
            </if>
            <if test="exField2 !=null ">
                #{exField2,jdbcType=VARCHAR },
            </if>
            <if test="exField3 !=null ">
                #{exField3,jdbcType=VARCHAR },
            </if>
            <if test="sex !=null ">
                #{sex,jdbcType=INTEGER },
            </if>
            <if test="avatar !=null ">
                #{avatar,jdbcType=VARCHAR },
            </if>
            <if test="status !=null ">
                #{status,jdbcType=INTEGER },
            </if>
        </trim>
    </insert>
    <update id="update" parameterType="cn.jianwoo.eshop.manage.entity.User">
        UPDATE  `user`
        <set>
            <if test="username !=null ">
                username=   #{username,jdbcType=VARCHAR },
            </if>
            <if test="password !=null ">
                password=  #{password,jdbcType=VARCHAR},
            </if>
            <if test="phone !=null ">
                phone= #{phone,jdbcType=VARCHAR },
            </if>
            <if test="email !=null ">
                email=  #{email,jdbcType=VARCHAR },
            </if>
            <if test="created !=null ">
                created= #{created,jdbcType=TIMESTAMP },
            </if>
            <if test="updated !=null ">
                updated=   #{updated,jdbcType=TIMESTAMP },
            </if>
            <if test="nickName !=null ">
                nick_name= #{nickName,jdbcType=VARCHAR },
            </if>
            <if test="type !=null ">
                `type`=#{type,jdbcType=INTEGER },
            </if>
            <if test="token !=null ">
                token=#{token,jdbcType=VARCHAR },
            </if>
            <if test="exField1 !=null ">
                ex_field1= #{exField1,jdbcType=VARCHAR },
            </if>
            <if test="exField2 !=null ">
                ex_field2=  #{exField2,jdbcType=VARCHAR },
            </if>
            <if test="exField3 !=null ">
                ex_field3= #{exField3,jdbcType=VARCHAR },
            </if>
            <if test="sex !=null ">
                sex= #{sex,jdbcType=INTEGER },
            </if>
            <if test="avatar !=null ">
                avatar= #{avatar,jdbcType=VARCHAR },
            </if>
            <if test="status !=null ">
                status= #{status,jdbcType=INTEGER },
            </if>
        </set>
        where id=#{id,jdbcType=BIGINT}
       </update>

</mapper>